{"version":3,"file":"static/js/964.32882e5f.chunk.js","mappings":"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","sources":["webpack://films/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://films/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://films/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\"};","import { Bars } from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={s.spinner}>\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"blue\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\",\"searchFormButton\":\"SearchForm_searchFormButton__Zv-9i\",\"searchFormButtonLabel\":\"SearchForm_searchFormButtonLabel__0xEFI\"};","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './SearchForm.module.css';\n\nfunction SearchForm({ onSubmit, defaultValue }) {\n  const searchRef = useRef();\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    onSubmit(searchRef.current.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={s.searchForm}>\n      <input\n        className={s.searchFormInput}\n        defaultValue={defaultValue}\n        ref={searchRef}\n        type=\"text\"\n        required\n      />\n      <button className={s.searchFormButton}>Search</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  defaultValue: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__hqYjd\",\"main\":\"Movies_main__zVRJ-\",\"title\":\"Movies_title__MDLXB\",\"moviesList\":\"Movies_moviesList__lstJL\",\"moviesItem\":\"Movies_moviesItem__2Ne0E\",\"poster\":\"Movies_poster__Yc3Qb\",\"movieTitle\":\"Movies_movieTitle__lz38M\",\"link\":\"Movies_link__MzAfU\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { fetchSearchApi } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport noPhoto from '../../images/no_image.jpg';\n\nimport s from './Movies.module.css';\n\nfunction Movies() {\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchQuery === null) return;\n\n    async function fetchMovies(moviesId) {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchSearchApi(moviesId);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies(searchQuery);\n  }, [searchQuery]);\n\n  const onSubmit = searchValue => {\n    console.log(searchValue);\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <section>\n      <SearchForm onSubmit={onSubmit} defaultValue={searchQuery} />\n      {isLoading && <Loader />}\n      {movies && (\n        <ul className={s.moviesList}>\n          {movies.map(movie => (\n            <li key={movie.id} className={s.moviesItem}>\n              <Link\n                key={movie.id}\n                lassName={s.link}\n                to={`${movie.id}`}\n                state={{ from: location }}\n              >\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : noPhoto\n                  }\n                  alt={movie.title}\n                  className={s.poster}\n                />\n              </Link>\n              <span className={s.movieTitle}>{movie.title}</span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '6761e5de3d20f3ac36b904d02ab8823a';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async (movieId) => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport const fetchSearchApi = async (query) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const fetchReview = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["Loader","className","s","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","onSubmit","defaultValue","searchRef","useRef","event","preventDefault","current","value","ref","type","required","location","useLocation","useState","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","moviesId","fetchSearchApi","results","console","log","message","fetchMovies","searchValue","query","map","movie","lassName","to","id","state","from","src","poster_path","noPhoto","alt","title","API_KEY","axios","fetchTrendingApi","data","fetchMovieById","movieId","fetchCast","fetchReview"],"sourceRoot":""}