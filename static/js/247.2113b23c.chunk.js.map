{"version":3,"file":"static/js/247.2113b23c.chunk.js","mappings":"mKAkDA,UA5Ca,WACX,IAcIA,EAdJ,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BH,EAAAA,EAAAA,YAA5B,eAAOK,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,GAAUL,GACPM,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAUI,EAAxB,IACLC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,QAAQb,GAAa,GACzB,GAAE,CAACC,KAKF,2BACGF,IAAa,SAAC,IAAD,IAEbI,GACCA,EAAOW,KAAI,SAAAC,GAMT,OAJElB,EADEkB,EAAMC,aACG,0CAAsCD,EAAMC,cAE5C,gFAGX,4BACE,gBAAKC,MAAM,OAAOC,IAAKrB,EAAasB,IAAKJ,EAAMK,QAC/C,0BACE,iCADF,IACgBL,EAAMK,SAEtB,0BACE,sCADF,IACqBL,EAAMM,eANnBN,EAAMO,GAUnB,MAGR,C,mEC/CD,EAA0B,wB,SCGbC,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPT,MAAM,KACNU,MAAM,OACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,8LChBKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAc,mCAAG,WAAOnC,GAAP,yFACLgC,EAAAA,EAAAA,IAAA,iBAAoBhC,EAApB,oBAAuC+B,EAAvC,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdE,EAAc,mCAAG,WAAOC,GAAP,yFACLL,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBM,EADrB,+CADK,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOd7B,EAAS,mCAAG,WAAML,GAAN,yFACAgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,4BACgB+B,EADhB,2BADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTI,EAAW,mCAAG,WAAMtC,GAAN,yFACFgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,4BACgB+B,EADhB,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["components/Cast/Cast.jsx","webpack://films/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCast } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const [actors, setActors] = useState();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchCast(movieId)\n      .then(({ cast }) => setActors(cast))\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  let profilePath;\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n\n      {actors &&\n        actors.map(actor => {\n          if (actor.profile_path) {\n            profilePath = `https://image.tmdb.org/t/p/w200/${actor.profile_path}`;\n          } else {\n            profilePath = `https://cdn1.iconfinder.com/data/icons/user-pictures/101/malecostume-512.png`;\n          }\n          return (\n            <div key={actor.id}>\n              <img width=\"30px\" src={profilePath} alt={actor.name} />\n              <p>\n                <b>Name:</b> {actor.name}\n              </p>\n              <p>\n                <b>Character:</b> {actor.character}\n              </p>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\"};","import { Bars } from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={s.spinner}>\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"blue\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '6761e5de3d20f3ac36b904d02ab8823a';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async (movieId) => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport const fetchSearchApi = async (query) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const fetchReview = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["profilePath","useState","isLoading","setIsLoading","movieId","useParams","actors","setActors","useEffect","fetchCast","then","cast","catch","error","console","log","finally","map","actor","profile_path","width","src","alt","name","character","id","Loader","className","s","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","API_KEY","axios","fetchTrendingApi","data","fetchMovieById","fetchSearchApi","query","fetchReview"],"sourceRoot":""}